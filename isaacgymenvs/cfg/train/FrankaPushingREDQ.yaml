params:
  seed: ${...seed}
  algo:
    name: redq

  model:
    name: soft_actor_critic

  network:
    name: redq
    separate: True

    space:
      continuous:
    mlp:
      units: [256, 128, 64]
      activation: relu

      initializer:
        name: orthogonal
    log_std_bounds: [-5, 2]
    normalization: layer_norm
    num_Q: 2

  load_checkpoint: ${if:${...checkpoint},True,False} # flag which sets whether to load the checkpoint
  load_path: ${...checkpoint} # path to the checkpoint to load

  config:
    name: ${resolve_default:FrankaPushing,${....experiment}}
    full_experiment_name: ${.name}
    env_name: rlgpu
    multi_gpu: ${....multi_gpu}

    normalize_input: True
    reward_shaper:
      scale_value: 1.0
    max_frames: 10_000_000_000
    mixed_precision: False
    rb_precision: float32
    fill_buffer_first: False

    num_steps_per_episode: 1
    gradient_steps: 8
    policy_update_fraction: 1

    save_best_after: 100
    save_frequency: 1000
    test_every_episodes: 10
    validation_ratio: 0.0

    batch_size: 4096
    alpha_lr: 0.005
    actor_lr: 0.0005
    critic_lr: 0.0005
    reset_every_steps: None
    grad_norm: None
    critic_tau: 0.005

    gamma: 0.99
    init_alpha: 1.0
    target_entropy_coef: 1.0
    learnable_temperature: true

    relabel_ratio: 0.0
    relabel_ratio_random: 0.0

    num_seed_steps: 5
    num_warmup_steps: 5000
    replay_buffer_size: 1048576
    num_actors: ${....task.env.numEnvs}
    actor_ensemble_mode: min

    q_target_mode: min
    num_min: 2